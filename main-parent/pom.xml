<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.tikal.mvn.sample</groupId>
    <artifactId>main-parent</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>
    <name>main-parent</name>


    <properties>
        <!-- change that or send a -D jvm argument -->
        <deploy.home>../deploy-home/</deploy.home>
    </properties>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <!-- sample how to replace filters set -->
    <profiles>
        <profile>
            <id>filter-set-1</id>
            <build>
                <filters>
                    <filter>filters.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>filter-set-2</id>
            <build>
                <filters>
                    <filter>second-filters.properties</filter>
                </filters>
            </build>
        </profile>




        <!-- Notes on this profile:
            this profile deploys all jars and wars to deploy.home.
            activated explicitly in the cmd.
            add the tomcat-install module.
            override configuration for war and jar plugins.
            copy all dependencies to ${deploy.home}/app/lib.
            dependency plugin also copies the dependencies of the wars,
            if you use stripVersion=true then you will have duplictae files,or you have to set
            a final name for the jar projects.
            
        -->

        <profile>
            <id>deploy</id>

            <!-- this doesn't work when executed from a sub module,
                    only when running the top reactor -->
            <modules>
                <module>../tomcat-deploy</module>
            </modules>

            <properties>
                <DeployLocation>${deploy.home}/app/</DeployLocation>
            </properties>

            
            <build>

                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-war-plugin</artifactId>
                            <configuration>
                                <webappDirectory>${DeployLocation}/webapp/${project.build.finalName}</webappDirectory>
                                <!--<warSourceExcludes>WEB-INF/lib/*.jar</warSourceExcludes>-->
                            </configuration>
                        </plugin>


                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jar-plugin</artifactId>
                            <configuration>
                                <outputDirectory>${DeployLocation}/lib</outputDirectory>
                            </configuration>
                        </plugin>

                    </plugins>
                </pluginManagement>


                <plugins>

                    <!--<plugin>-->
                        <!--<groupId>org.apache.maven.plugins</groupId>-->
                        <!--<artifactId>maven-war-plugin</artifactId>-->
                        <!--<configuration>-->
                            <!--<webappDirectory>${DeployLocation}/webapp/${project.build.finalName}</webappDirectory>-->
                            <!--&lt;!&ndash;<packagingExcludes>**/*.jar</packagingExcludes>&ndash;&gt;-->
                        <!--</configuration>-->
                    <!--</plugin>-->


                    <!--<plugin>-->
                        <!--<groupId>org.apache.maven.plugins</groupId>-->
                        <!--<artifactId>maven-jar-plugin</artifactId>-->
                        <!--<configuration>-->
                            <!--<outputDirectory>${DeployLocation}/lib</outputDirectory>-->
                        <!--</configuration>-->
                    <!--</plugin>-->


                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${DeployLocation}/lib</outputDirectory>
                                    <stripVersion>true</stripVersion>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    




                    <!-- todo: add clean plugin to clean files -->

                    <!--<plugin>-->
                        <!--<groupId>org.jvnet.maven-antrun-extended-plugin</groupId>-->
                        <!--<artifactId>maven-antrun-extended-plugin</artifactId>-->
                        <!--<version>1.8</version>-->
                        <!--<executions>-->
                            <!--<execution>-->
                                <!--<id>deploy-artifact</id>-->
                                <!--<phase>install</phase>-->
                                <!--<goals>-->
                                    <!--<goal>run</goal>-->
                                <!--</goals>-->
                                <!--<configuration>-->
                                    <!--<tasks>-->

                                        <!--&lt;!&ndash; can also copy dependencies here using resolveArtifact &ndash;&gt;-->


                                        <!--<copy toDir="${DeployLocation}/${project.packaging}"-->
                                              <!--filtering="false"-->
                                              <!--preservelastmodified="true"-->
                                              <!--overwrite="true">-->
                                            <!--&lt;!&ndash;file="${project.build.directory}/${project.build.finalName}.${project.packaging}">&ndash;&gt;-->
                                            <!--<fileset dir="${project.basedir}">-->
                                                <!--&lt;!&ndash;<include name="target/${project.build.finalName}.${project.packaging}"/>&ndash;&gt;-->
                                                <!--<include name="target/*.jar"/>-->
                                                <!--<include name="target/*.war"/>-->
                                                <!--&lt;!&ndash;<exclude name="*.pom"/>&ndash;&gt;-->
                                            <!--</fileset>-->
                                            <!--<compositemapper>-->
                                                <!--<globmapper from="target"-->
                                                            <!--to="/"-->
                                                            <!--handledirsep="true"/>-->
                                                <!--&lt;!&ndash;<globmapper from="**/jar/**"&ndash;&gt;-->
                                                <!--&lt;!&ndash;to="**/lib/**"&ndash;&gt;-->
                                                <!--&lt;!&ndash;handledirsep="true"/>&ndash;&gt;-->
                                            <!--</compositemapper>-->

                                        <!--</copy>-->
                                        <!--<echo message="final name ${project.build.directory}/${project.build.finalName}.${project.packaging}"/>-->
                                        <!--<echo message="the deploy location is ${DeployLocation}"/>-->
                                    <!--</tasks>-->
                                <!--</configuration>-->
                            <!--</execution>-->
                        <!--</executions>-->
                    <!--</plugin>-->


                   

                    
                </plugins>


                
            </build>
        </profile>


    </profiles>

</project>
